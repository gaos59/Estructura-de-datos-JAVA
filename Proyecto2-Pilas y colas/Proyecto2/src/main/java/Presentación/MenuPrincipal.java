/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentación;

import Entidades.Productora;
import Negocio.EliminarObjeto;
import javax.swing.JOptionPane;

/**
 *
 * @author Gorte
 */
public class MenuPrincipal extends javax.swing.JFrame {
    
    
    MostrarProductoras mostrarProductoras;
    MostrarPeliculas mostrarPeliculas;
    EliminarPeliculas eliminarPeliculas;
    TrasladoPeliculas trasladoPeliculas;
    EliminarProductora eliminarProductora;
    private Productora[] productoras;
    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnCerrar = new javax.swing.JButton();
        PnlMenuPrincipal = new javax.swing.JPanel();
        BtnRegistroProductora = new javax.swing.JButton();
        BtnRegistroPeliculas = new javax.swing.JButton();
        BtnEliminarPeliculas = new javax.swing.JButton();
        BtnTrasladarPeliculas = new javax.swing.JButton();
        BtnEliminarProductora = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu principal");
        setName("MenuPrincipal"); // NOI18N
        setResizable(false);

        BtnCerrar.setBackground(new java.awt.Color(255, 204, 204));
        BtnCerrar.setText("Cerrar");
        BtnCerrar.setToolTipText("");
        BtnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCerrarActionPerformed(evt);
            }
        });

        BtnRegistroProductora.setText("Registrar productora");
        BtnRegistroProductora.setActionCommand("");
        BtnRegistroProductora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegistroProductoraActionPerformed(evt);
            }
        });

        BtnRegistroPeliculas.setText("Registrar películas");
        BtnRegistroPeliculas.setToolTipText("");
        BtnRegistroPeliculas.setActionCommand("");
        BtnRegistroPeliculas.setPreferredSize(new java.awt.Dimension(138, 23));
        BtnRegistroPeliculas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegistroPeliculasActionPerformed(evt);
            }
        });

        BtnEliminarPeliculas.setText("Eliminar película");
        BtnEliminarPeliculas.setPreferredSize(new java.awt.Dimension(138, 23));
        BtnEliminarPeliculas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarPeliculasActionPerformed(evt);
            }
        });

        BtnTrasladarPeliculas.setText("Trasladar películas");
        BtnTrasladarPeliculas.setToolTipText("");
        BtnTrasladarPeliculas.setPreferredSize(new java.awt.Dimension(138, 23));
        BtnTrasladarPeliculas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTrasladarPeliculasActionPerformed(evt);
            }
        });

        BtnEliminarProductora.setText("Eliminar productora");
        BtnEliminarProductora.setPreferredSize(new java.awt.Dimension(138, 23));
        BtnEliminarProductora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarProductoraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlMenuPrincipalLayout = new javax.swing.GroupLayout(PnlMenuPrincipal);
        PnlMenuPrincipal.setLayout(PnlMenuPrincipalLayout);
        PnlMenuPrincipalLayout.setHorizontalGroup(
            PnlMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlMenuPrincipalLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(PnlMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BtnEliminarProductora, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .addGroup(PnlMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(BtnEliminarPeliculas, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                        .addComponent(BtnRegistroPeliculas, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                        .addComponent(BtnRegistroProductora, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                        .addComponent(BtnTrasladarPeliculas, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        PnlMenuPrincipalLayout.setVerticalGroup(
            PnlMenuPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlMenuPrincipalLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(BtnRegistroProductora, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnRegistroPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnEliminarPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnTrasladarPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnEliminarProductora, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnCerrar)
                .addGap(29, 29, 29))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PnlMenuPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PnlMenuPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnCerrar)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_BtnCerrarActionPerformed

    public void setRegistroProductoraBtnEnabled(boolean enabled) {
        BtnRegistroProductora.setEnabled(enabled);
    }
    
    public void setRegistroPeliculasBtnEnabled(boolean enabled) {
        BtnRegistroPeliculas.setEnabled(enabled);
    }
    
    public void setEliminarPeliculasBtnEnabled(boolean enabled) {
        BtnEliminarPeliculas.setEnabled(enabled);
    }
    public void setTrasladarPeliculasBtnEnabled(boolean enabled) {
        BtnTrasladarPeliculas.setEnabled(enabled);
    }
    public void setEliminarProductoraBtnEnabled(boolean enabled) {
        BtnEliminarProductora.setEnabled(enabled);
    }
    
    public void AddProductora(Productora productoraAdd){
        productoras = new Negocio.AgregarProductora().AgregarProductora(productoras, productoraAdd);
        mostrarProductoras.RefrescarProductoras(productoras);
        if (mostrarPeliculas != null) {
                mostrarPeliculas.RefrescarProductoras(productoras);
        }         
    }
    
    public void AddPelicula (Productora productoraAddPelicula){
        for (int i=0; i < productoras.length; i++){
            if (productoras[i].getID() == productoraAddPelicula.getID()){
                productoras[i] = productoraAddPelicula;
            }
        }
    }
    public Productora[] DeleteProductora () throws Exception{
        productoras = EliminarObjeto.EliminarObjeto(productoras);
        return productoras;
    }
    
    private void BtnRegistroProductoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegistroProductoraActionPerformed
        try {
            if (mostrarProductoras == null || !mostrarProductoras.isDisplayable()) {
                mostrarProductoras = new MostrarProductoras(MenuPrincipal.this, productoras);
                mostrarProductoras.setVisible(true);
                BtnRegistroProductora.setEnabled(false);
            }  
        }
        catch (Negocio.ExcepcionPersonalizada e) {
            JOptionPane.showMessageDialog(this, "No se puede abrir opción de registrar productoras: " + e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se puede abrir opción de registrar productoras", "Error", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_BtnRegistroProductoraActionPerformed

    private void BtnRegistroPeliculasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegistroPeliculasActionPerformed
        try {
            if (productoras == null){
               throw new Negocio.ExcepcionPersonalizada ("No hay productoras registradas"); 
            }
            if (mostrarPeliculas == null || !mostrarPeliculas.isDisplayable()) {
                mostrarPeliculas = new MostrarPeliculas(MenuPrincipal.this, productoras);
                mostrarPeliculas.setVisible(true);
                BtnRegistroPeliculas.setEnabled(false);
            }  
        }
        catch (Negocio.ExcepcionPersonalizada e) {
            JOptionPane.showMessageDialog(this, "No se puede abrir opción de registrar películas: " + e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se puede abrir opción de registrar películas", "Error", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_BtnRegistroPeliculasActionPerformed

    private void BtnEliminarPeliculasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarPeliculasActionPerformed
        try {
            if (productoras == null){
               throw new Negocio.ExcepcionPersonalizada ("No hay productoras registradas"); 
            }
            int ProductorasNoVacias = 0;
            for (Productora productora : productoras) {
                if (productora.getPeliculas() != null) {
                    ProductorasNoVacias++;
                }
            }
            if (ProductorasNoVacias > 0){
                if (eliminarPeliculas == null || !eliminarPeliculas.isDisplayable()) {
                    eliminarPeliculas = new EliminarPeliculas(MenuPrincipal.this, productoras);
                    eliminarPeliculas.setVisible(true);
                    BtnEliminarPeliculas.setEnabled(false);
                }
            }
            else {
                throw new Negocio.ExcepcionPersonalizada ("No hay productoras con películas registradas");
            }
        }
        catch (Negocio.ExcepcionPersonalizada e) {
            JOptionPane.showMessageDialog(this, "No se puede abrir opción de eliminar películas: " + e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se puede abrir opción de eliminar películas", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnEliminarPeliculasActionPerformed

    private void BtnTrasladarPeliculasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTrasladarPeliculasActionPerformed
        try {
            if (productoras == null){
               throw new Negocio.ExcepcionPersonalizada ("No hay productoras registradas"); 
            }
            int ProductorasNoVacias = 0;
            for (Productora productora : productoras) {
                if (productora.getPeliculas() != null) {
                    ProductorasNoVacias++;
                }
            }
            if (ProductorasNoVacias > 0){
                if (trasladoPeliculas == null || !trasladoPeliculas.isDisplayable()) {
                   trasladoPeliculas = new TrasladoPeliculas(MenuPrincipal.this, productoras);
                    trasladoPeliculas.setVisible(true);
                    BtnTrasladarPeliculas.setEnabled(false);
                }            
            }
            else {
                throw new Negocio.ExcepcionPersonalizada ("No hay productoras con películas registradas");
            }
        }
        catch (Negocio.ExcepcionPersonalizada e) {
            JOptionPane.showMessageDialog(this, "No se puede abrir opción de trasladar películas: " + e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se puede abrir opción de trasladar películas", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnTrasladarPeliculasActionPerformed

    private void BtnEliminarProductoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarProductoraActionPerformed
        try {
            if (productoras == null){
               throw new Negocio.ExcepcionPersonalizada ("No hay productoras registradas"); 
            }

            if (eliminarProductora == null || !eliminarProductora.isDisplayable()) {
                    eliminarProductora = new EliminarProductora(MenuPrincipal.this, productoras);
                    eliminarProductora.setVisible(true);
                    BtnEliminarProductora.setEnabled(false);
            }
        }
        catch (Negocio.ExcepcionPersonalizada e) {
            JOptionPane.showMessageDialog(this, "No se puede abrir opción de eliminar productoras: " + e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se puede abrir opción de eliminar productoras", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnEliminarProductoraActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCerrar;
    private javax.swing.JButton BtnEliminarPeliculas;
    private javax.swing.JButton BtnEliminarProductora;
    private javax.swing.JButton BtnRegistroPeliculas;
    private javax.swing.JButton BtnRegistroProductora;
    private javax.swing.JButton BtnTrasladarPeliculas;
    private javax.swing.JPanel PnlMenuPrincipal;
    // End of variables declaration//GEN-END:variables
}
